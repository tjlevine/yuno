// This is Yuno's main config file. The comments mean it's not quite valid JSON,
// but excluding that the syntax is the same. If you've seen a JavaScript or
// Python dictionary, you should be ok. Just keep the key names double-quoted
// and remember backslash (\) is a special character.
//
// If you do get parsing errors or some other kinds of nasties:
//
// 1. Curse loudly.
// 2. Rage at Python's JSON parser for not giving better messages.
// 3. If you're stuck, turn on syntax highlighting (JavaScript and Python syntax
//    both work in a pinch) and see if anything looks wrong. If you're extra
//    stuck, try diffing against config.json.default in this folder.
//
// Unless otherwise noted, all relative paths in this file are relative to
// Yuno's home folder. It should be ../../ if you haven't moved this file. And
// if you have, Yuno has stopped working. You should put it back.
// -----------------------------------------------------------------------------


// Directives begin here. Happy hacking. :) ------------------------------------

{
    // Path to the top-level folder that contains the test cases, either
    // absolute or relative to yuno.py. If you followed the setup instructions
    // exactly, the default here is correct.
    //
    "test_folder": "../tests",

    // Path to the data folder, either absolute or relative to yuno.py. Yuno
    // keeps its log files here.
    //
    "data_folder": "data",

    // When loading named test suites, these folders will be checked in order
    // (left to right) until a matching suite is found. Suites created with
    // yuno run ... --save will go into the leftmost folder only.
    //
    // Each path may be absolute or relative to yuno.py.
    //
    "suite_folders": ["settings/suites"],

    // Test case source files (to be compiled) end with this extension.
    //
    "source_extension": ".rc",

    // Test case answer files (correct compiler output) end with this extension.
    //
    "answer_extension": ".ans.out",

    // Test case output files (output from tests that failed, generated on
    // request) end with this extension. This is currently not used, but may be
    // in the future.
    //
    "output_extension": ".my.out",

    // Classpath used when running the compiler. Each path should be its own
    // list item, absolute or relative to test_folder.
    //
    "compiler_classpath": ["..", "../bin"],

    // Name of the Java class that runs your compiler, in a form that's safe to
    // pass as-is to `java`.
    //
    // Tl;DR LEAVE OFF THE ".class".
    //
    "compiler_executable": "RC",

    // The command sent to your OS when it's time to run the compiler on a
    // test case. Yuno won't expect a certain output or try to pipe it
    // anywhere, so it's technically safe to do other stuff in here if you
    // really need to. Please note that doing so would be Inviting Failure.
    //
    // ### NOTE: The working path for this command will be test_folder.
    //
    // {Placeholders} are expanded as follows:
    //
    // {classpath} - The classpath defined above, lovingly handmade for your OS.
    // {compiler_executable} - As defined above.
    // {testcase} - path/to/current/testcase.rc
    //
    "compiler_invocation":
        "java -cp {classpath} {compiler_executable} {testcase}",


    // Message templates -------------------------------------------------------


    // Template for the message shown when a test passes.
    // See settings/templates/success.txt.
    //
    "success_message": "settings/templates/success.txt",

    // Template for the message shown when a test fails.
    // See settings/templates/failure.txt.
    //
    "failure_message": "settings/templates/failure.txt",

    // Template for the message shown when a test fails with a diff requested.
    // See settings/templates/failure-diff.txt
    //
    "diff_message": "settings/templates/failure-diff.txt",

    // Template for the message shown when a test is skipped.
    // See settings/templates/test-skipped.txt.
    //
    "skip_message": "settings/templates/test-skipped.txt",

    // Template for the message shown when something unexpected happens while a
    // test is running. See settings/templates/warning.txt.
    //
    "warn_message": "settings/templates/warning.txt"
}
